--USAGE FUNNELS

--First, we want to combine the information from the three tables (browse, checkout, purchase) into one table.
--Each row will represent a single user:
--If the user has any entries in checkout, then is_checkout will be True.
--If the user has any entries in purchase, then is_purchase will be True.

--Start by selecting all rows (*) from the LEFT JOIN of:
--browse (aliased as b)
--checkout (aliased as c)
--purchase (aliased as p)
--Be sure to use this order to make sure that we get all of the rows.
--LIMIT your results to the first 50 so that it loads quickly.

SELECT *
FROM browse AS 'b'
LEFT JOIN checkout AS 'c'
  ON b.user_id = c.user_id
LEFT JOIN purchase as 'p'
  ON b.user_id = p.user_id
LIMIT 50;


--But we don’t want all of these columns in the result!
--Instead of selecting all columns using *, let’s select these four:
--DISTINCT b.browse_date
--b.user_id
--c.user_id IS NOT NULL AS 'is_checkout'
--p.user_id IS NOT NULL AS 'is_purchase'
--Edit your query so that you select these columns.

SELECT DISTINCT b.browse_date, b.user_id, c.user_id IS NOT NULL AS 'is_checkout', p.user_id IS NOT NULL AS 'is_purchase'
FROM browse AS 'b'
LEFT JOIN checkout AS 'c'
  ON b.user_id = c.user_id
LEFT JOIN purchase as 'p'
  ON b.user_id = p.user_id
LIMIT 50;


--Let’s put the whole thing in a WITH statement so that we can continue on building our query.
--First, add a column that counts the total number of rows in funnels.
--Alias this column as ‘num_browse’.
--This is the number of users in the “browse” step of the funnel.

--Second, add another column that sums the is_checkout in funnels.
--Alias this column as ‘num_checkout’.
--This is the number of users in the “checkout” step of the funnel.

--Third, add another column that sums the is_purchase column in funnels.
--Alias this column as ‘num_purchase’.
--This is the number of users in the “purchase” step of the funnel.

WITH funnels AS (
  SELECT DISTINCT b.browse_date,
     b.user_id,
     c.user_id IS NOT NULL AS 'is_checkout',
     p.user_id IS NOT NULL AS 'is_purchase'
  FROM browse AS 'b'
  LEFT JOIN checkout AS 'c'
    ON c.user_id = b.user_id
  LEFT JOIN purchase AS 'p'
    ON p.user_id = c.user_id)
SELECT COUNT(*) AS num_browse, SUM(is_checkout) AS 'num_checkout', SUM (is_purchase) AS 'num_purchase'
FROM funnels;

--Finally, let’s do add some more calculations to make the results more in depth.
--Let’s add these two columns:
--Percentage of users from browse to checkout
--Percentage of users from checkout to purchase

WITH funnels AS (
  SELECT DISTINCT b.browse_date,
     b.user_id,
     c.user_id IS NOT NULL AS 'is_checkout',
     p.user_id IS NOT NULL AS 'is_purchase'
  FROM browse AS 'b'
  LEFT JOIN checkout AS 'c'
    ON c.user_id = b.user_id
  LEFT JOIN purchase AS 'p'
    ON p.user_id = c.user_id)
SELECT COUNT(*) AS num_browse, SUM(is_checkout) AS 'num_checkout', SUM (is_purchase) AS 'num_purchase', 
(1.0 * SUM(is_checkout) / COUNT(user_id)) AS 'browse_to_checkout_users', (1.0 * SUM(is_purchase) / SUM(is_checkout)) AS 'checkout_to_purchase_users'
FROM funnels;
